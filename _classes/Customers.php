<?php/** * Class Customers */class Customers{    /**     * attributes of the class     */    /**     * @var int     */    private $idC;    /**     * @var int     */    private $customernumber;    /**     * @var string     */    private $sexe;    /**     * @var string     */    private $name;    /**     * @var string     */    private $firstname;    /**     * @var string     */    private $email;    /**     * @var string     */    private $phone;    /**     * @var string     */    private $society;    /**     * @var int     */    private $address_id;    /*================== Getters and Setters =====================*/    /**     * @return int     */    public function getIdC()    {        return $this->idC;    }    /**     * @param int $idC     * @return Customers     */    public function setIdC($idC)    {        $this->idC = $idC;        return $this;    }    /**     * @return int     */    public function getCustomernumber()    {        return $this->customernumber;    }    /**     * @param int $customernumber     * @return Customers     */    public function setCustomernumber($customernumber)    {        $this->customernumber = $customernumber;        return $this;    }    /**     * @return string     */    public function getSexe()    {        return $this->sexe;    }    /**     * @param string $sexe     * @return Customers     */    public function setSexe($sexe)    {        $this->sexe = $sexe;        return $this;    }    /**     * @return string     */    public function getName()    {        return $this->name;    }    /**     * @param string $name     * @return Customers     */    public function setName($name)    {        $this->name = $name;        return $this;    }    /**     * @return string     */    public function getFirstname()    {        return $this->firstname;    }    /**     * @param string $firstname     * @return Customers     */    public function setFirstname($firstname)    {        $this->firstname = $firstname;        return $this;    }    /**     * @return string     */    public function getEmail()    {        return $this->email;    }    /**     * @param string $email     * @return Customers     */    public function setEmail($email)    {        $this->email = $email;        return $this;    }    /**     * @return string     */    public function getPhone()    {        return $this->phone;    }    /**     * @param string $phone     * @return Customers     */    public function setPhone($phone)    {        $this->phone = $phone;        return $this;    }    /**     * @return string     */    public function getSociety()    {        return $this->society;    }    /**     * @param string $society     * @return Customers     */    public function setSociety($society)    {        $this->society = $society;        return $this;    }    /**     * @return int     */    public function getAddressId()    {        return $this->address_id;    }    /**     * @param int $address_id     * @return Customers     */    public function setAddressId($address_id)    {        $this->address_id = $address_id;        return $this;    }    /*========================================================== Creation of CRUD C:insert  R:select U:update D:delete==========================================================*/    /**     * Customer insertion function     */    function addCustomer()    {        global $db;        $requete = $db->prepare('INSERT INTO customers            (customernumber,sexe,name,firstname,email,phone,society,address_id)           values(?,?,?,?,?,?,?,?)');        $requete->execute(array(            $this->customernumber,            $this->sexe,            $this->name,            $this->firstname,            $this->email,            $this->phone,            $this->society,            $this->address_id        ));    }    /**     *  Display function customers     * @return false|PDOStatement     */    function getAllCustomers()    {        global $db;        $customersListe = $db->query('SELECT `idC`, `customernumber`,`sexe`, `name`, `firstname`, `email`, `phone`,        `society`, `way`,`postalcode`,`city`FROM `customers` INNER JOIN address WHERE customers.address_id = address.idA         ORDER BY idC DESC');        return $customersListe;    }    /**     * Delete an customer function     */    function deleteCustomer()    {        global $db;        $requete = $db->prepare('DELETE FROM customers WHERE idC = ?');        $requete->execute(array($this->idC));    }    /**     * Update function of an customer+     */    function updateCustomer()    {        global $db;        $requete = $db->prepare('UPDATE customers SET  sexe = ? , name=? , firstname=? , email=? , phone=? , society=? , address_id= ? WHERE idC=?');        $requete->execute(array(            $this->sexe,            $this->name,            $this->firstname,            $this->email,            $this->phone,            $this->society,            $this->address_id,            $this->idC        ));    }    /**     * Check the existence of an customer     * @param $email     * @return bool     */    function isCustomerExiste($email)    {        global $db;        $existe = false;        $reqCustomer = $db->prepare('SELECT * FROM customers WHERE email = ?');        $reqCustomer->execute(array($email));        if ($reqCustomer->rowCount() == 1) {            $existe = true;        }        return $existe;    }    /**     * Check the existence of an address customer     * @param $id     * @return int     */    function countCustomerAdsressId($id)    {        global $db;        $reqCustomer = $db->prepare('SELECT COUNT(address_id) FROM customers WHERE address_id = ?');        $reqCustomer->execute(array($id));        $var = $reqCustomer->fetchColumn() ;        return $var;    }    /**     * Recovery function address identifier     * @param $idC     * @return mixed|null     */    function recupAdress_Id($idC)    {        global $db;        $var = null;        $reqAddressId = $db->prepare("SELECT address_id FROM customers WHERE idC=?");        $reqAddressId->execute(array($idC));        $var = $reqAddressId->fetchColumn();        if ($var != null) {            return $var;        }    }    /**     * Recovery function customer identifier     * @param $name     * @param $firstname     * @param $email     * @return mixed|null     */    function recupIdcustomer($name, $firstname, $email)    {        global $db;        $var = null;        $reqIdAddress = $db->prepare("SELECT idC FROM customers WHERE name=? AND firstname=? AND email=?");        $reqIdAddress->execute(array($name, $firstname, $email));        $var = $reqIdAddress->fetchColumn();        if ($var != null) {            return $var;        }    }    /**     * Recovery function customer number     * @param $Customernumber     * @return mixed|null     */    function recupCustomerId($Customernumber)    {        global $db;        $var = null;        $reqAddressId = $db->prepare("SELECT idC FROM customers WHERE customernumber=?");        $reqAddressId->execute(array($Customernumber));        $var = $reqAddressId->fetchColumn();        if ($var != null) {            return $var;        }    }    /**     * Recovery function customer data     * @param $id     * @return bool|PDOStatement     */    function recupCustomerdetails($id)    {        global $db;        $customerListe = $db->prepare('SELECT sexe , customernumber , name , firstname ,email ,phone , society ,address_id FROM customers WHERE idC = ?');        $customerListe->execute(array($id));        return $customerListe;    }}