<?php/** * Class Invoices */class Invoices{    /**     * attributes of the class     */    /**     * @var int     */    private $idI;    /**     * @var int     */    private $invoicenumber;    /**     * @var string     */    private $date;    /**     * @var float     */    private $totalwt;    /**     * @var float     */    private $vat;    /**     * @var float     */    private $totalttc;    /**     * @var string     */    private $message;    /**     * @var int     */    private $site_id;    /*================== Getters and Setters =====================*/    /**     * @return int     */    public function getIdI()    {        return $this->idI;    }    /**     * @param int $idI     * @return Invoices     */    public function setIdI($idI)    {        $this->idI = $idI;        return $this;    }    /**     * @return int     */    public function getInvoicenumber()    {        return $this->invoicenumber;    }    /**     * @param int $invoicenumber     * @return Invoices     */    public function setInvoicenumber($invoicenumber)    {        $this->invoicenumber = $invoicenumber;        return $this;    }    /**     * @return string     */    public function getDate()    {        return $this->date;    }    /**     * @param string $date     * @return Invoices     */    public function setDate($date)    {        $this->date = $date;        return $this;    }    /**     * @return float     */    public function getTotalwt()    {        return $this->totalwt;    }    /**     * @param float $totalwt     * @return Invoices     */    public function setTotalwt($totalwt)    {        $this->totalwt = $totalwt;        return $this;    }    /**     * @return float     */    public function getVat()    {        return $this->vat;    }    /**     * @param float $vat     * @return Invoices     */    public function setVat($vat)    {        $this->vat = $vat;        return $this;    }    /**     * @return float     */    public function getTotalttc()    {        return $this->totalttc;    }    /**     * @param float $totalttc     * @return Invoices     */    public function setTotalttc($totalttc)    {        $this->totalttc = $totalttc;        return $this;    }    /**     * @return string     */    public function getMessage()    {        return $this->message;    }    /**     * @param string $message     * @return Invoices     */    public function setMessage($message)    {        $this->message = $message;        return $this;    }    /**     * @return int     */    public function getSiteId()    {        return $this->site_id;    }    /**     * @param int $site_id     * @return Invoices     */    public function setSiteId($site_id)    {        $this->site_id = $site_id;        return $this;    }    /*==========================================================Creation of CRUD C:insert  R:select U:update D:delete==========================================================*/    /**     * Invoices insertion function     */    function addInvoice()    {        global $db;        $requete = $db->prepare('INSERT INTO invoices            (invoicenumber,totalwt,vat,totalttc,message,site_id)           values(?,?,?,?,?,?)');        $requete->execute(array(            $this->invoicenumber,            $this->totalwt,            $this->vat,            $this->totalttc,            $this->message,            $this->site_id        ));    }    /**     * Display function invoices     * @return false|PDOStatement     */    function getAllInvoices()    {        global $db;        $invoiceListe = $db->query('SELECT idI, invoicenumber, date , totalwt , vat , totalttc , message ,        site_id , initialmonatant , totalpayments , remainingbalance , quotation_id        FROM invoices INNER JOIN sites WHERE invoices.site_id = sites.idS ORDER BY idI DESC LIMIT 10');        return $invoiceListe;    }    /**     * Update invoice function     */    function updateMessageInvoice()    {        global $db;        $requete = $db->prepare('UPDATE invoices SET message = ? WHERE idI = ?');        $requete->execute(array(            $this->message,            $this->idI        ));    }    /**     * Update invoice function     */    function updateTotalInvoice()    {        global $db;        $requete = $db->prepare('UPDATE invoices SET totalwt = ? , vat = ? , totalttc = ?  WHERE idI = ?');        $requete->execute(array(            $this->totalwt,            $this->vat,            $this->totalttc,            $this->idI        ));    }    /**     * Function of recovery data     * @param $id     * @return bool|PDOStatement     */    function recupInvoicedetails($id)    {        global $db;        $invoiceListe = $db->prepare('SELECT invoicenumber,totalwt,vat,totalttc,message,site_id        FROM invoices WHERE idI = ?');        $invoiceListe->execute(array($id));        return $invoiceListe;    }    /**     * Delete invoices function     */    function deleteInvoices()    {        global $db;        $requete = $db->prepare('DELETE FROM invoices WHERE idI = ?');        $requete->execute(array($this->idI));    }    /**     * check the existence of an site_id     * @param $id     * @return int     */    function countInvoiceSiteId($id)    {        global $db;        $reqSite = $db->prepare('SELECT * FROM invoices WHERE site_id = ?');        $reqSite->execute(array($id));        $var = $reqSite->rowCount();        return $var;    }    /**     * Function of recovery id     * @param $quotationnumber     * @return mixed|null     */    function recupInvoiceId($invoicenumber)    {        global $db;        $var = null;        $reqInvoiceId = $db->prepare("SELECT idI FROM invoices WHERE invoicenumber =?");        $reqInvoiceId->execute(array($invoicenumber));        $var = $reqInvoiceId->fetchColumn();        if ($var != null) {            return $var;        }    }    /**     * check the existence of an invoicenumber     * @param $quotationnumber     * @return bool     */    function isInvoicenumberExiste($invoicenumber)    {        global $db;        $existe = false;        $reqInvoice = $db->prepare('SELECT * FROM invoices WHERE invoicenumber = ?');        $reqInvoice->execute(array($invoicenumber));        if ($reqInvoice->rowCount() == 1) {            $existe = true;        }        return $existe;    }}