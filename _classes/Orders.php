<?php/** * Class Orders */class Orders{    //attributes of the class    /**     * @var int     */    private $idO;    /**     * @var int     */    private $ordernumber;    /**     * @var string     */    private $date;    /**     * @var float     */    private $totalwt;    /**     * @var float     */    private $totalttc;    /**     * @var int     */    private $site_id;    /**     * @var int     */    private $provider_id;    /*================== Getters and Setters =====================*/    /**     * @return int     */    public function getIdO()    {        return $this->idO;    }    /**     * @param int $idO     * @return Orders     */    public function setIdO($idO)    {        $this->idO = $idO;        return $this;    }    /**     * @return int     */    public function getOrdernumber()    {        return $this->ordernumber;    }    /**     * @param int $ordernumber     * @return Orders     */    public function setOrdernumber($ordernumber)    {        $this->ordernumber = $ordernumber;        return $this;    }    /**     * @return string     */    public function getDate()    {        return $this->date;    }    /**     * @param string $date     * @return Orders     */    public function setDate($date)    {        $this->date = $date;        return $this;    }    /**     * @return float     */    public function getTotalwt()    {        return $this->totalwt;    }    /**     * @param float $totalwt     * @return Orders     */    public function setTotalwt($totalwt)    {        $this->totalwt = $totalwt;        return $this;    }    /**     * @return float     */    public function getTotalttc()    {        return $this->totalttc;    }    /**     * @param float $totalttc     * @return Orders     */    public function setTotalttc($totalttc)    {        $this->totalttc = $totalttc;        return $this;    }    /**     * @return int     */    public function getSiteId()    {        return $this->site_id;    }    /**     * @param int $site_id     * @return Orders     */    public function setSiteId($site_id)    {        $this->site_id = $site_id;        return $this;    }    /**     * @return int     */    public function getProviderId()    {        return $this->provider_id;    }    /**     * @param int $provider_id     * @return Orders     */    public function setProviderId($provider_id)    {        $this->provider_id = $provider_id;        return $this;    }    /*==========================================================     Creation of CRUD C:insert  R:select U:update D:delete    ===========================================================*/    /**     * Function add an order     */    function addOrder()    {       global $db;        $requete = $db->prepare('INSERT INTO orders (ordernumber,date,totalwt,totalttc,site_id,provider_id) values (?,?,?,?,?,?)');        $requete->execute(array(            $this->ordernumber,            $this->date,            $this->totalwt,            $this->totalttc,            $this->site_id,            $this->provider_id        ));    }    /**     * Function display all orders     * @return false|PDOStatement     */    function getAllsiteOrders()    {        global $db;        $listeOrders = $db->query('SELECT idO , ordernumber , date ,totalwt , totalttc , site_id , idP, society ,         email ,phone, credit, creditrest FROM orders INNER JOIN providers WHERE orders.provider_id = providers.idP         ORDER BY idO DESC');        return $listeOrders;    }    /**     * Function display all provider_orders     * @param $id     * @return false|PDOStatement     */    function getAllOrderProvider($id)    {        global $db;        $orderListe = $db->prepare('SELECT idO , ordernumber , date , totalwt , totalttc , site_id          FROM orders WHERE provider_id = ? ORDER BY idO DESC');        $orderListe->execute(array($id));        return $orderListe;    }    /**     * Delete an order function     */    function deleteOrder()    {       global $db;        $requete = $db->prepare('DELETE FROM orders WHERE idO = ?');        $requete->execute(array($this->idO));    }    /**     * Update function of an order     */    function updateOrder()    {      global $db;        $requete = $db->prepare('UPDATE orders SET ordernumber = ? , date = ? , totalwt = ? ,         totalttc = ? , site_id = ?  , provider_id = ? where idO = ?');        $requete->execute(array(            $this->ordernumber,            $this->date,            $this->totalttc,            $this->totalwt,            $this->site_id,            $this->provider_id,            $this->idO        ));    }    /**     * check the existence of an order     * @param $provider_id     * @param $ordernumber     * @return bool     */    function isOrderExiste($provider_id, $ordernumber)    {        global $db;        $existe = false;        $reqOrder = $db->prepare('SELECT * FROM orders WHERE ordernumber = ? AND provider_id = ? ');        $reqOrder->execute(array($provider_id, $ordernumber));        if ($reqOrder->rowCount() == 1) {            $existe = true;        }        return $existe;    }    /**     * check the existence of an provider_id     * @param $id     * @return int     */    function countProviderId($id)    {        global $db;        $reqorder = $db->prepare('SELECT * FROM orders WHERE provider_id = ?');        $reqorder->execute(array($id));        $var = $reqorder->rowCount();        return $var;    }}