<?php/** * Class Quotation */class Quotation{    /**     * attributes of the class     */    /**     * @var int     */    private $idQ;    /**     * @var string     */    private $workobject;    /**     * @var int     */    private $quotationnumber;    /**     * @var string     */    private $date;    /**     * @var int     */    private $totalwt;    /**     * @var int     */    private $vatrate;    /**     * @var int     */    private $vat;    /**     * @var int     */    private $totalttc;    /**     * @var string     */    private $message;    /**     * @var int     */    private $customer_id;    /*================== Getters and Setters =====================*/    /**     * @return int     */    public function getIdQ()    {        return $this->idQ;    }    /**     * @param int $idQ     * @return Quotation     */    public function setIdQ($idQ)    {        $this->idQ = $idQ;        return $this;    }    /**     * @return string     */    public function getWorkobject()    {        return $this->workobject;    }    /**     * @param string $workobject     * @return Quotation     */    public function setWorkobject($workobject)    {        $this->workobject = $workobject;        return $this;    }    /**     * @return int     */    public function getQuotationnumber()    {        return $this->quotationnumber;    }    /**     * @param int $quotationnumber     * @return Quotation     */    public function setQuotationnumber($quotationnumber)    {        $this->quotationnumber = $quotationnumber;        return $this;    }    /**     * @return string     */    public function getDate()    {        return $this->date;    }    /**     * @param string $date     * @return Quotation     */    public function setDate($date)    {        $this->date = $date;        return $this;    }    /**     * @return int     */    public function getTotalwt()    {        return $this->totalwt;    }    /**     * @param int $totalwt     * @return Quotation     */    public function setTotalwt($totalwt)    {        $this->totalwt = $totalwt;        return $this;    }    /**     * @return int     */    public function getVatrate()    {        return $this->vatrate;    }    /**     * @param int $vatrate     * @return Quotation     */    public function setVatrate($vatrate)    {        $this->vatrate = $vatrate;        return $this;    }    /**     * @return int     */    public function getVat()    {        return $this->vat;    }    /**     * @param int $vat     * @return Quotation     */    public function setVat($vat)    {        $this->vat = $vat;        return $this;    }    /**     * @return int     */    public function getTotalttc()    {        return $this->totalttc;    }    /**     * @param int $totalttc     * @return Quotation     */    public function setTotalttc($totalttc)    {        $this->totalttc = $totalttc;        return $this;    }    /**     * @return string     */    public function getMessage()    {        return $this->message;    }    /**     * @param string $message     * @return Quotation     */    public function setMessage($message)    {        $this->message = $message;        return $this;    }    /**     * @return int     */    public function getCustomerId()    {        return $this->customer_id;    }    /**     * @param int $customer_id     * @return Quotation     */    public function setCustomerId($customer_id)    {        $this->customer_id = $customer_id;        return $this;    }    /*==========================================================Creation of CRUD C:insert  R:select U:update D:delete==========================================================*/    /**     * Quote insertion function     */    function addQuotation()    {        global $db;        $requete = $db->prepare('INSERT INTO quotation            (workobject,quotationnumber,totalwt,vatrate,vat,totalttc,message,customer_id)           values(?,?,?,?,?,?,?,?)');        $requete->execute(array(            $this->workobject,            $this->quotationnumber,            $this->totalwt,            $this->vatrate,            $this->vat,            $this->totalttc,            $this->message,            $this->customer_id        ));    }    /**     * Display function quotes     * @return false|PDOStatement     */    function getAllquotation()    {        global $db;        $quotationListe = $db->query('SELECT `idQ`, `quotationnumber`, `customernumber`, `workobject`, `date`, `totalwt`,        `vatrate`, `vat`, `totalttc` FROM quotation INNER JOIN customers WHERE quotation.customer_id = customers.idC          ORDER BY idQ DESC');        return $quotationListe;    }    /**     * Function of recovery data     * @param $id     * @return bool|PDOStatement     */    function recupQuotationdetails($id)    {        global $db;        $quotationListe = $db->prepare('SELECT workobject , quotationnumber , date , totalwt ,         vatrate , vat , totalttc ,customer_id , message FROM quotation WHERE idQ = ?');        $quotationListe->execute(array($id));        return $quotationListe;    }    /**     * Function of recovery id     * @param $quotationnumber     * @return mixed|null     */    function recupQuotationId($quotationnumber)    {        global $db;        $var = null;        $reqQuotationId = $db->prepare("SELECT idQ FROM quotation WHERE quotationnumber=?");        $reqQuotationId->execute(array($quotationnumber));        $var = $reqQuotationId->fetchColumn();        if ($var != null) {            return $var;        }    }    /**     * Delete quote function     */    function deleteQuotation()    {        global $db;        $requete = $db->prepare('DELETE FROM quotation WHERE idQ = ?');        $requete->execute(array($this->idQ));    }    /**     * Update quote function     */    function updateBeforQuotation()    {        global $db;        $requete = $db->prepare('UPDATE quotation SET workobject = ? ,vatrate = ? , message = ? WHERE idQ=?');        $requete->execute(array(            $this->workobject,            $this->vatrate,            $this->message,            $this->idQ        ));    }    /**     * Update quote function     */    function updateQuotation()    {        global $db;        $requete = $db->prepare('UPDATE quotation SET totalwt = ? , vat = ? , totalttc = ? WHERE idQ=?');        $requete->execute(array(            $this->totalwt,            $this->vat,            $this->totalttc,            $this->idQ        ));    }    /**     * check the existence of an customer     * @param $quotationnumber     * @return bool     */    function isQuotationExiste($quotationnumber)    {        global $db;        $existe = false;        $reqQutation = $db->prepare('SELECT * FROM quotation WHERE quotationnumber = ?');        $reqQutation->execute(array($quotationnumber));        if ($reqQutation->rowCount() == 1) {            $existe = true;        }        return $existe;    }    /**     * check the existence of an customer_id     * @param $id     * @return int     */    function countQuotationCustomerId($id)    {        global $db;        $reqCustomer = $db->prepare('SELECT * FROM quotation WHERE customer_id = ?');        $reqCustomer->execute(array($id));        $var = $reqCustomer->rowCount();        return $var;    }}