<?php/** * Class Sites */class Sites{    /**     * attributes of the class     */    /**     * @var int     */    private $idS;    /**     * @var float     */    private $initialmonatant;    /**     * @var float     */    private $totalpayments;    /**     * @var float     */    private $remainingbalance;    /**     * @var int     */    private $quotation_id;    /*================== Getters and Setters =====================*/    /**     * @return int     */    public function getIdS()    {        return $this->idS;    }    /**     * @param int $idS     * @return Sites     */    public function setIdS($idS)    {        $this->idS = $idS;        return $this;    }    /**     * @return float     */    public function getInitialmonatant()    {        return $this->initialmonatant;    }    /**     * @param float $initialmonatant     * @return Sites     */    public function setInitialmonatant($initialmonatant)    {        $this->initialmonatant = $initialmonatant;        return $this;    }    /**     * @return float     */    public function getTotalpayments()    {        return $this->totalpayments;    }    /**     * @param float $totalpayments     * @return Sites     */    public function setTotalpayments($totalpayments)    {        $this->totalpayments = $totalpayments;        return $this;    }    /**     * @return float     */    public function getRemainingbalance()    {        return $this->remainingbalance;    }    /**     * @param float $remainingbalance     * @return Sites     */    public function setRemainingbalance($remainingbalance)    {        $this->remainingbalance = $remainingbalance;        return $this;    }    /**     * @return int     */    public function getQuotationId()    {        return $this->quotation_id;    }    /**     * @param int $quotation_id     * @return Sites     */    public function setQuotationId($quotation_id)    {        $this->quotation_id = $quotation_id;        return $this;    }    /*==========================================================    Creation of CRUD C:insert  R:select U:update D:delete   ==========================================================*/    /**     * Function add an sites     */    function addSites()    {        global $db;        $requete = $db->prepare('INSERT INTO sites(initialmonatant ,totalpayments ,        remainingbalance ,quotation_id) values(?,?,?,?)');        $requete->execute(array(            $this->initialmonatant,            $this->totalpayments,            $this->remainingbalance,            $this->quotation_id        ));    }    /**     * Function display all sites     * @return false|PDOStatement     */    function getAllSites()    {        global $db;        $siteListe = $db->query('SELECT idS, quotationnumber , workobject ,totalttc ,initialmonatant , totalpayments, remainingbalance         FROM sites INNER JOIN quotation WHERE sites.quotation_id = quotation.idQ ORDER BY idS DESC');        return $siteListe;    }    /**     * Update function of an sites     */    function updateSites()    {        global $db;        $requete = $db->prepare('UPDATE sites SET initialmonatant = ?, totalpayments = ? , remainingbalance = ?,        quotation_id = ? WHERE idS = ?');        $requete->execute(array(            $this->initialmonatant,            $this->totalpayments,            $this->remainingbalance,            $this->quotation_id,            $this->idS        ));    }    /**     * Update function of an sites     */    function updateTotalSites()    {        global $db;        $requete = $db->prepare('UPDATE sites SET totalpayments = ? , remainingbalance = ?        WHERE idS = ?');        $requete->execute(array(            $this->totalpayments,            $this->remainingbalance,            $this->idS        ));    }    /**     * Delete an sites function     */    function deleteSites()    {        global $db;        $requete = $db->prepare('DELETE FROM sites WHERE idS = ?');        $requete->execute(array($this->idS)        );    }    /**     * check the existence of an quotation_id     * @param $id     * @return int     */    function countSitesquotationId($id)    {        global $db;        $reqSites = $db->prepare('SELECT * FROM sites WHERE quotation_id = ?');        $reqSites->execute(array($id));        $var = $reqSites->rowCount();        return $var;    }    /**     * Function of recovery data     * @param $id     * @return bool|PDOStatement     */    function recupSitedetails($id)    {        global $db;        $siteListe = $db->prepare('SELECT initialmonatant ,totalpayments ,        remainingbalance ,quotation_id FROM sites WHERE idS = ?');        $siteListe->execute(array($id));        return $siteListe;    }    /**     * Calculate the sum of a colone function     * @param $id     * @return bool|PDOStatement     */    function calculateSumTotalPayement()    {        global $db;        $requete = $db->prepare('SELECT SUM(totalpayment) FROM sites WHERE ');        $requete->execute(array());        return $requete;    }}