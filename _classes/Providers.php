<?php/** * Class Providers */class Providers{    //attributes of the class    /**     * @var int     */    private $idP;    /**     * @var string     */    private $society;    /**     * @var string     */    private $email;    /**     * @var string     */    private $phone;    /**     * @var string     */    private $mobile;    /**     * @var float     */    private $credit;    /**     * @var float     */    private $creditrest;    /*================== Getters and Setters =====================*/    /**     * @return int     */    public function getIdP()    {        return $this->idP;    }    /**     * @param int $idP     * @return Providers     */    public function setIdP($idP)    {        $this->idP = $idP;        return $this;    }    /**     * @return string     */    public function getSociety()    {        return $this->society;    }    /**     * @param string $society     * @return Providers     */    public function setSociety($society)    {        $this->society = $society;        return $this;    }    /**     * @return string     */    public function getEmail()    {        return $this->email;    }    /**     * @param string $email     * @return Providers     */    public function setEmail($email)    {        $this->email = $email;        return $this;    }    /**     * @return string     */    public function getPhone()    {        return $this->phone;    }    /**     * @param string $phone     * @return Providers     */    public function setPhone($phone)    {        $this->phone = $phone;        return $this;    }    /**     * @return string     */    public function getMobile()    {        return $this->mobile;    }    /**     * @param string $mobile     * @return Providers     */    public function setMobile($mobile)    {        $this->mobile = $mobile;        return $this;    }    /**     * @return float     */    public function getCredit()    {        return $this->credit;    }    /**     * @param float $credit     * @return Providers     */    public function setCredit($credit)    {        $this->credit = $credit;        return $this;    }    /**     * @return float     */    public function getCreditrest()    {        return $this->creditrest;    }    /**     * @param float $creditrest     * @return Providers     */    public function setCreditrest($creditrest)    {        $this->creditrest = $creditrest;        return $this;    }    /*==========================================================    Creation of CRUD C:insert  R:select U:update D:delete    ===========================================================*/    //Function add an provider    function addProvider()    {        global $db;        $requete = $db->prepare('INSERT INTO providers (society,email,phone,mobile,credit,creditrest) values(?,?,?,?,?,?)');        $requete->execute(array(            $this->society,            $this->email,            $this->phone,            $this->mobile,            $this->credit,            $this->creditrest        ));    }    // Function display all providers    function getAllProviders()    {        global $db;        $listeProviders = $db->query('SELECT idP, society, email ,phone, mobile, credit, creditrest FROM providers');        return $listeProviders;    }    // Delete an provider function    function deleteProvider()    {        global $db;        $requete = $db->prepare('DELETE FROM providers WHERE idP = ?');        $requete->execute(array($this->idP));    }    // Update function of an provider    function updateProvider()    {        global $db;        $requete = $db->prepare('UPDATE providers SET society=? , email=? , phone=? , mobile = ? where idP=?');        $requete->execute(array(            $this->society,            $this->email,            $this->phone,            $this->mobile,            $this->idP        ));    }    /**     * check the existence of an provider     * @param $society     * @param $email     * @param $phone     * @return bool     */    function isProviderExiste($society , $email )    {        global $db;        $existe = false;        $reqProvider = $db->prepare('SELECT * FROM providers WHERE society = ? AND email = ? ');        $reqProvider->execute(array($society , $email));        if ($reqProvider->rowCount() == 1) {            $existe = true;        }        return $existe;    }}